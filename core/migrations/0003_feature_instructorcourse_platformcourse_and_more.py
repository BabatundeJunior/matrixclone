# Generated by Django 5.1.2 on 2024-11-11 23:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0003_remove_userprofile_is_premium'),
        ('core', '0002_progress_subscription_enrollment'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the feature.')),
            ],
        ),
        migrations.CreateModel(
            name='InstructorCourse',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.course')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            bases=('core.course',),
        ),
        migrations.CreateModel(
            name='PlatformCourse',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.course')),
                ('is_paid', models.BooleanField(default=False)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            bases=('core.course',),
        ),
        migrations.RemoveField(
            model_name='course',
            name='access_level',
        ),
        migrations.RemoveField(
            model_name='course',
            name='date_created',
        ),
        migrations.RemoveField(
            model_name='course',
            name='instructor',
        ),
        migrations.AddField(
            model_name='subscription',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('expired', 'Expired')], default='active', max_length=10),
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platform_course_enrollments', to='authentication.userprofile'),
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.platformcourse'),
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_days', models.PositiveIntegerField(help_text='Duration of the plan in days')),
                ('features', models.ManyToManyField(blank=True, related_name='subscription_plans', to='core.feature')),
            ],
        ),
        migrations.AddField(
            model_name='subscription',
            name='plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.subscriptionplan'),
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_date', models.DateTimeField()),
                ('pair', models.CharField(help_text='Enter currency pair, e.g., GBPUSD', max_length=6)),
                ('entry_price', models.DecimalField(decimal_places=5, max_digits=10)),
                ('exit_price', models.DecimalField(decimal_places=5, max_digits=10)),
                ('position_size', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit_loss', models.DecimalField(decimal_places=2, max_digits=10)),
                ('trade_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradePerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_trades', models.PositiveIntegerField(default=0)),
                ('total_profit_loss', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('win_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('avg_return_per_trade', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('top_pairs', models.JSONField(blank=True, default=list)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trade_performance', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
